<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>로그인</title>

  <!-- axios -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
  <h1>로그인</h1>

  <!-- 로그인 버튼 클릭하면 성공시 profile.ejs에서 특정 유저 정보를 보여줘야 하기 때문에
  userid 정보를 value에 저장해서 넘겨줌 -->

  <!-- 로그인 성공 시, 프로필 페이지로 이동할 폼 -->
  <form name="form_info" action="/user/profile" method="POST">
    <!-- type: hidden 안보임 -->
    <input type="hidden" name="userid" />
  </form>

  <!-- 로그인 폼 -->
  <form name="form_login">
    <label for="userid">ID</label>
    <input id="userid" type="text" name="userid" required /><br />
    <label for="password">Password</label>
    <input id="password" type="password" name="pw" required /><br />
    <button type="button" onclick="login();">Login</button>
  </form>

  <a href="/user/signup">Register</a>

  <script>
    async function login() {
      const form_login = document.forms['form_login'];

      if (!form_login.checkValidity()) {
        form_login.reportValidity();
        return;
      }

      try {
        let res = await axios({
          method: 'POST',
          url: '/user/signin',
          data: {
            userid: form_login.userid.value,
            pw: form_login.pw.value
          }
        })

        console.log(res.data);
        const {
          data
        } = res;

        if (data.isLogin) {
          alert('로그인 성공!')

          // profile 페이지 요청 보내기
          const form_info = document.forms['form_info'];
          form_info.userid.value = form_login.userid.value; // 아이디 값 저장
          // form_info 제출 - POST /user/profile (일반 폼 전송)
          form_info.submit();
        } else {
          alert('로그인 실패!');
          form_login.reset(); // 폼 초기화
        }

      } catch (err) {
        console.log(err);
      }
    }
  </script>
</body>

</html>